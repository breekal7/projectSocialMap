/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SocialMap.java
 *
 * Created on Dec 6, 2011, 12:12:21 PM
 */
package projectsocialmap;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author M
 */
public class SocialMap extends javax.swing.JFrame {

    String k;
    boolean bl = true;
    //private boolean windowStatus = true;
    /*private String username;
    private String password;
    private String msisdn;
    private String latitude;
    private String longitude;
    private String time;*/
    MyLibrary library = new MyLibrary();
    Map mainMap;
    TempData temp = new TempData();

    /** Creates new form SocialMap */
    public SocialMap() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        login = new javax.swing.JFrame();
        userNameLabel = new javax.swing.JLabel();
        userNameValue = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordValue = new javax.swing.JPasswordField();
        msisdnLabel = new javax.swing.JLabel();
        msisdnValue = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        loginError = new javax.swing.JLabel();
        FrndAccept = new javax.swing.JFrame();
        FrndAcceptLabel = new javax.swing.JLabel();
        FrndAcceptValue = new javax.swing.JLabel();
        BtnFrndAccept = new javax.swing.JButton();
        BtnCancel = new javax.swing.JButton();
        frmEvents = new javax.swing.JFrame();
        lblhead = new javax.swing.JLabel();
        lblid = new javax.swing.JLabel();
        lblname = new javax.swing.JLabel();
        lbllong = new javax.swing.JLabel();
        lbllat = new javax.swing.JLabel();
        txtnm = new javax.swing.JTextField();
        txtadd = new javax.swing.JTextField();
        txtlon = new javax.swing.JTextField();
        txtlat = new javax.swing.JTextField();
        ecanBtn = new javax.swing.JButton();
        ecreBtn = new javax.swing.JButton();
        ceDate = new javax.swing.JTextField();
        Date = new javax.swing.JLabel();
        ceTime = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        sfReq = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        sfReqTx = new javax.swing.JTextField();
        sfReqOk = new javax.swing.JButton();
        taskPaneInfo = new javax.swing.JLayeredPane();
        welcomePan = new javax.swing.JPanel();
        welcomMsg = new javax.swing.JLabel();
        nameOfUser = new javax.swing.JLabel();
        phoneOfUser = new javax.swing.JLabel();
        nearLabel = new javax.swing.JLabel();
        infoLatitudeLabel = new javax.swing.JLabel();
        infoLatitude = new javax.swing.JLabel();
        infoLongitudeLabel = new javax.swing.JLabel();
        infoLongitude = new javax.swing.JLabel();
        lastUpdateLabel = new javax.swing.JLabel();
        lastUpdate = new javax.swing.JLabel();
        showReqBtn = new javax.swing.JButton();
        eventLabel = new javax.swing.JLabel();
        eventBtn = new javax.swing.JButton();
        reqLabel = new javax.swing.JLabel();
        showAllFrnd = new javax.swing.JButton();
        frndReqPan = new javax.swing.JPanel();
        frndReqLabel = new javax.swing.JLabel();
        addToMapScrollPane = new javax.swing.JScrollPane();
        addToMapTable = new javax.swing.JTable();
        frndReqPanBack = new javax.swing.JButton();
        allFrndPan = new javax.swing.JPanel();
        frndListLabel = new javax.swing.JLabel();
        frndListScrollPan = new javax.swing.JScrollPane();
        frndListTable = new javax.swing.JTable();
        allFrndPanBack = new javax.swing.JButton();
        addfrnd = new javax.swing.JButton();
        events = new javax.swing.JPanel();
        eventsHeading = new javax.swing.JLabel();
        evntBack = new javax.swing.JButton();
        eventsScrollPane = new javax.swing.JScrollPane();
        EventsTable = new javax.swing.JTable();
        evntBack1 = new javax.swing.JButton();
        mapPanel = new javax.swing.JLayeredPane();
        ziBtn = new javax.swing.JButton();
        zoBtn = new javax.swing.JButton();
        mapContainer = new javax.swing.JLabel();

        login.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        login.setTitle("Log in");
        login.setAlwaysOnTop(true);
        login.setBounds(setting.loginFormAlign(432, 250));
        login.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        login.setMinimumSize(new java.awt.Dimension(432, 250));
        login.setName("login"); // NOI18N
        login.setResizable(false);

        userNameLabel.setFont(new java.awt.Font("Tahoma", 0, 12));
        userNameLabel.setText("User Name");

        userNameValue.setText("saifur_rahman");
        userNameValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameValueActionPerformed(evt);
            }
        });

        passwordLabel.setFont(new java.awt.Font("Tahoma", 0, 12));
        passwordLabel.setText("Password");

        passwordValue.setText("123456");

        msisdnLabel.setFont(new java.awt.Font("Tahoma", 0, 12));
        msisdnLabel.setText("MSISDN");

        msisdnValue.setText("8801724970792");

        loginButton.setText("Log in");
        loginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginButtonMouseClicked(evt);
            }
        });

        reset.setText("Reset");
        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetMouseClicked(evt);
            }
        });

        loginError.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout loginLayout = new javax.swing.GroupLayout(login.getContentPane());
        login.getContentPane().setLayout(loginLayout);
        loginLayout.setHorizontalGroup(
            loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginLayout.createSequentialGroup()
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, loginLayout.createSequentialGroup()
                            .addGap(201, 201, 201)
                            .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, loginLayout.createSequentialGroup()
                            .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(loginLayout.createSequentialGroup()
                                    .addGap(60, 60, 60)
                                    .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(passwordLabel)
                                        .addComponent(userNameLabel))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE))
                                .addGroup(loginLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(msisdnLabel)
                                    .addGap(18, 18, 18)))
                            .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(msisdnValue)
                                .addComponent(userNameValue, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                                .addComponent(passwordValue))))
                    .addGroup(loginLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(loginError, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        loginLayout.setVerticalGroup(
            loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameLabel)
                    .addComponent(userNameValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(msisdnValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(msisdnLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginButton)
                    .addComponent(reset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginError, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        login.getAccessibleContext().setAccessibleParent(this);

        FrndAccept.addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                FrndAcceptWindowLostFocus(evt);
            }
        });

        FrndAcceptLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FrndAcceptLabel.setText("Do you want to accept request from");
        FrndAcceptLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        FrndAcceptValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        BtnFrndAccept.setText("Accept");
        BtnFrndAccept.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnFrndAcceptMouseClicked(evt);
            }
        });

        BtnCancel.setText("Cancel");
        BtnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnCancelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout FrndAcceptLayout = new javax.swing.GroupLayout(FrndAccept.getContentPane());
        FrndAccept.getContentPane().setLayout(FrndAcceptLayout);
        FrndAcceptLayout.setHorizontalGroup(
            FrndAcceptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrndAcceptLayout.createSequentialGroup()
                .addGroup(FrndAcceptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FrndAcceptLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(FrndAcceptLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE))
                    .addGroup(FrndAcceptLayout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addGroup(FrndAcceptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(FrndAcceptValue, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FrndAcceptLayout.createSequentialGroup()
                                .addComponent(BtnFrndAccept)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BtnCancel)))))
                .addContainerGap())
        );
        FrndAcceptLayout.setVerticalGroup(
            FrndAcceptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrndAcceptLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(FrndAcceptLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(FrndAcceptValue, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FrndAcceptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnCancel)
                    .addComponent(BtnFrndAccept))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        frmEvents.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        frmEvents.setTitle("Create new event");
        frmEvents.setMinimumSize(new java.awt.Dimension(400, 350));
        frmEvents.setResizable(false);

        lblhead.setFont(new java.awt.Font("Tahoma", 0, 18));
        lblhead.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblhead.setText("CREATE  A  NEW  EVENT");

        lblid.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblid.setText("Event Name:");

        lblname.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblname.setText("Event Address:");

        lbllong.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbllong.setText("Longitude:");

        lbllat.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lbllat.setText("Latitude:");

        txtnm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnmActionPerformed(evt);
            }
        });

        ecanBtn.setText("Cancel");
        ecanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ecanBtnActionPerformed(evt);
            }
        });

        ecreBtn.setText("Create");
        ecreBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ecreBtnActionPerformed(evt);
            }
        });

        ceDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ceDateActionPerformed(evt);
            }
        });

        Date.setText("Date (yyyy-mm-dd):");

        ceTime.setText(" ");

        jLabel2.setText("Time:");

        javax.swing.GroupLayout frmEventsLayout = new javax.swing.GroupLayout(frmEvents.getContentPane());
        frmEvents.getContentPane().setLayout(frmEventsLayout);
        frmEventsLayout.setHorizontalGroup(
            frmEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblhead, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
            .addGroup(frmEventsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(frmEventsLayout.createSequentialGroup()
                        .addComponent(lbllong, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtlon))
                    .addGroup(frmEventsLayout.createSequentialGroup()
                        .addComponent(lblid, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtnm, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(frmEventsLayout.createSequentialGroup()
                        .addComponent(lblname, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtadd))
                    .addGroup(frmEventsLayout.createSequentialGroup()
                        .addGroup(frmEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(Date)
                            .addComponent(lbllat, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(frmEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtlat)
                            .addGroup(frmEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(ceTime, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ceDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)))))
                .addContainerGap(71, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frmEventsLayout.createSequentialGroup()
                .addContainerGap(252, Short.MAX_VALUE)
                .addComponent(ecreBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ecanBtn)
                .addContainerGap())
        );
        frmEventsLayout.setVerticalGroup(
            frmEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmEventsLayout.createSequentialGroup()
                .addComponent(lblhead, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(frmEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(frmEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblname, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtadd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(frmEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbllong, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtlon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(frmEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbllat, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtlat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(frmEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ceDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Date))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(frmEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ceTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(frmEventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ecanBtn)
                    .addComponent(ecreBtn))
                .addContainerGap())
        );

        sfReq.setMinimumSize(new java.awt.Dimension(330, 110));
        sfReq.setResizable(false);

        jLabel1.setText("Enter friend's phone number:");

        sfReqTx.setText("88017");
        sfReqTx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sfReqTxActionPerformed(evt);
            }
        });

        sfReqOk.setText("Ok");
        sfReqOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sfReqOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sfReqLayout = new javax.swing.GroupLayout(sfReq.getContentPane());
        sfReq.getContentPane().setLayout(sfReqLayout);
        sfReqLayout.setHorizontalGroup(
            sfReqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sfReqLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addComponent(sfReqTx, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sfReqLayout.createSequentialGroup()
                .addContainerGap(122, Short.MAX_VALUE)
                .addComponent(sfReqOk, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
        );
        sfReqLayout.setVerticalGroup(
            sfReqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sfReqLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(sfReqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sfReqTx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sfReqOk)
                .addGap(52, 52, 52))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Social Map");
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(900, 605));
        setName("social_map_mainFrame"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        taskPaneInfo.setBackground(new java.awt.Color(255, 255, 255));
        taskPaneInfo.setForeground(new java.awt.Color(255, 255, 255));
        taskPaneInfo.setMinimumSize(new java.awt.Dimension(200, 600));
        taskPaneInfo.setName("Task Pane"); // NOI18N
        taskPaneInfo.setPreferredSize(new java.awt.Dimension(250, 600));

        welcomMsg.setFont(new java.awt.Font("Tahoma", 1, 24));
        welcomMsg.setText("Welcome");

        nameOfUser.setText("Double click here to set your name");

        phoneOfUser.setText("");

        nearLabel.setFont(new java.awt.Font("Tahoma", 1, 14));
        nearLabel.setText("You are near");

        infoLatitudeLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        infoLatitudeLabel.setText("Latitude:");

        infoLatitude.setText("");

        infoLongitudeLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        infoLongitudeLabel.setText("Longitude:");

        infoLongitude.setText("");

        lastUpdateLabel.setText("Last updated on");

        lastUpdate.setText("23/10/2011 01:10 pm (GMT+10)");

        showReqBtn.setText("Show all");
        showReqBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showReqBtnMouseClicked(evt);
            }
        });
        showReqBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showReqBtnActionPerformed(evt);
            }
        });

        eventLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        eventLabel.setText("You have 100 events on your map");

        eventBtn.setText("Show all");
        eventBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eventBtnMouseClicked(evt);
            }
        });

        reqLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        reqLabel.setText("You have 1000 add to map requests");

        showAllFrnd.setText("Show all friends");
        showAllFrnd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showAllFrndMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout welcomePanLayout = new javax.swing.GroupLayout(welcomePan);
        welcomePan.setLayout(welcomePanLayout);
        welcomePanLayout.setHorizontalGroup(
            welcomePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(welcomePanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(welcomePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePanLayout.createSequentialGroup()
                        .addComponent(showAllFrnd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(showReqBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(welcomePanLayout.createSequentialGroup()
                        .addComponent(lastUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(60, Short.MAX_VALUE))
                    .addGroup(welcomePanLayout.createSequentialGroup()
                        .addComponent(lastUpdateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(100, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePanLayout.createSequentialGroup()
                        .addGroup(welcomePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(infoLongitudeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(infoLatitudeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(welcomePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(infoLatitude, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(infoLongitude, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40))
                    .addGroup(welcomePanLayout.createSequentialGroup()
                        .addComponent(nearLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(140, Short.MAX_VALUE))
                    .addGroup(welcomePanLayout.createSequentialGroup()
                        .addComponent(nameOfUser, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(40, Short.MAX_VALUE))
                    .addGroup(welcomePanLayout.createSequentialGroup()
                        .addComponent(phoneOfUser, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(130, Short.MAX_VALUE))
                    .addGroup(welcomePanLayout.createSequentialGroup()
                        .addComponent(welcomMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(120, Short.MAX_VALUE))
                    .addGroup(welcomePanLayout.createSequentialGroup()
                        .addComponent(reqLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(welcomePanLayout.createSequentialGroup()
                        .addComponent(eventLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePanLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 141, Short.MAX_VALUE)
                        .addComponent(eventBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))))
        );
        welcomePanLayout.setVerticalGroup(
            welcomePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, welcomePanLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(welcomMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameOfUser)
                .addGap(4, 4, 4)
                .addComponent(phoneOfUser)
                .addGap(18, 18, 18)
                .addComponent(nearLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(welcomePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infoLatitude)
                    .addComponent(infoLatitudeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(welcomePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(infoLongitude)
                    .addComponent(infoLongitudeLabel))
                .addGap(18, 18, 18)
                .addComponent(lastUpdateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastUpdate)
                .addGap(18, 18, 18)
                .addComponent(reqLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(welcomePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showReqBtn)
                    .addComponent(showAllFrnd))
                .addGap(27, 27, 27)
                .addComponent(eventLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eventBtn)
                .addGap(123, 123, 123))
        );

        welcomePan.setBounds(0, 0, 250, 470);
        taskPaneInfo.add(welcomePan, javax.swing.JLayeredPane.DEFAULT_LAYER);

        frndReqLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        frndReqLabel.setText("You have add to map request from");

        addToMapTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Phone No"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        addToMapTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addToMapTableMouseClicked(evt);
            }
        });
        addToMapScrollPane.setViewportView(addToMapTable);

        frndReqPanBack.setText("Back");
        frndReqPanBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                frndReqPanBackMouseClicked(evt);
            }
        });
        frndReqPanBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frndReqPanBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frndReqPanLayout = new javax.swing.GroupLayout(frndReqPan);
        frndReqPan.setLayout(frndReqPanLayout);
        frndReqPanLayout.setHorizontalGroup(
            frndReqPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frndReqPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frndReqPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(frndReqLabel)
                    .addGroup(frndReqPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(frndReqPanBack)
                        .addComponent(addToMapScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        frndReqPanLayout.setVerticalGroup(
            frndReqPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frndReqPanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(frndReqLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addToMapScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(frndReqPanBack)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        frndReqPan.setBounds(0, 0, 250, 470);
        taskPaneInfo.add(frndReqPan, javax.swing.JLayeredPane.DEFAULT_LAYER);

        frndListLabel.setFont(new java.awt.Font("Tahoma", 1, 12));
        frndListLabel.setText("Friend's List");

        frndListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Phone no"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        frndListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                frndListTableMouseClicked(evt);
            }
        });
        frndListScrollPan.setViewportView(frndListTable);

        allFrndPanBack.setText("Back");
        allFrndPanBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allFrndPanBackMouseClicked(evt);
            }
        });
        allFrndPanBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allFrndPanBackActionPerformed(evt);
            }
        });

        addfrnd.setText("Add New");
        addfrnd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addfrndMouseClicked(evt);
            }
        });
        addfrnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addfrndActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout allFrndPanLayout = new javax.swing.GroupLayout(allFrndPan);
        allFrndPan.setLayout(allFrndPanLayout);
        allFrndPanLayout.setHorizontalGroup(
            allFrndPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allFrndPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(allFrndPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(frndListLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(allFrndPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(allFrndPanLayout.createSequentialGroup()
                            .addComponent(addfrnd)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(allFrndPanBack))
                        .addComponent(frndListScrollPan, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        allFrndPanLayout.setVerticalGroup(
            allFrndPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(allFrndPanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(frndListLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(frndListScrollPan, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(allFrndPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(allFrndPanBack)
                    .addComponent(addfrnd))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        allFrndPan.setBounds(0, 0, 250, 470);
        taskPaneInfo.add(allFrndPan, javax.swing.JLayeredPane.DEFAULT_LAYER);

        eventsHeading.setFont(new java.awt.Font("Tahoma", 1, 12));
        eventsHeading.setText("Events");

        evntBack.setText("Back");
        evntBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                evntBackMouseClicked(evt);
            }
        });
        evntBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evntBackActionPerformed(evt);
            }
        });

        EventsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Event Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        EventsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EventsTableMouseClicked(evt);
            }
        });
        eventsScrollPane.setViewportView(EventsTable);

        evntBack1.setText("Add New");
        evntBack1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                evntBack1MouseClicked(evt);
            }
        });
        evntBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evntBack1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout eventsLayout = new javax.swing.GroupLayout(events);
        events.setLayout(eventsLayout);
        eventsLayout.setHorizontalGroup(
            eventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(eventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventsHeading)
                    .addGroup(eventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(eventsLayout.createSequentialGroup()
                            .addComponent(evntBack1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(evntBack))
                        .addComponent(eventsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        eventsLayout.setVerticalGroup(
            eventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(eventsHeading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eventsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(eventsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(evntBack)
                    .addComponent(evntBack1))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        events.setBounds(0, 0, 250, 470);
        taskPaneInfo.add(events, javax.swing.JLayeredPane.DEFAULT_LAYER);

        ziBtn.setText("+");
        ziBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ziBtnActionPerformed(evt);
            }
        });
        ziBtn.setBounds(0, 570, 40, 30);
        mapPanel.add(ziBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        zoBtn.setText("-");
        zoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoBtnActionPerformed(evt);
            }
        });
        zoBtn.setBounds(40, 570, 40, 30);
        mapPanel.add(zoBtn, javax.swing.JLayeredPane.DEFAULT_LAYER);

        mapContainer.setBackground(new java.awt.Color(255, 255, 255));
        mapContainer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mapContainer.setText("Loading...");
        mapContainer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        mapContainer.setBounds(0, 0, 645, 600);
        mapPanel.add(mapContainer, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mapPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(taskPaneInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mapPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(taskPaneInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
    //windowStatus = true;

    /*if (library.getWindowStatus()) {
    //login = new JFrame("Log in");
    login.setVisible(true);
    }*/
    //this.setVisible(true);
    //login.setVisible(false);
}//GEN-LAST:event_formFocusGained

private void userNameValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameValueActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_userNameValueActionPerformed

private void resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseClicked
    userNameValue.setText(null);
    passwordValue.setText(null);
    msisdnValue.setText(null);
    //this.setVisible(true);
    //library.setWindowStatus(false);
    /*login.setVisible(false);
    login.dispose();
    this.welcomePan.setVisible(true);
    this.events.setVisible(false);
    this.allFrndPan.setVisible(false);
    this.frndReqPan.setVisible(false);*/
    //mapContainer.setText(map.mapLoader);
}//GEN-LAST:event_resetMouseClicked

private void loginButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMouseClicked
    LocationAPI locationObj = new LocationAPI(userNameValue.getText(), passwordValue.getText(), msisdnValue.getText());

    /*library.setUsername(locationObj.getUsername());
    library.setPassword(locationObj.getPassword());
    library.setMsisdn(locationObj.getMsisdn());
    library.setLatitude(locationObj.getLatitude());
    library.setLongitude(locationObj.getLongitude());
    library.setStatusMsg(locationObj.getStatusMsg());*/

    library = locationObj;

    if (locationObj.checkLogin()) {
        Map map = new Map(library.getLatitude(), library.getLongitude(), "U");
        mainMap = map;
        this.setVisible(true);
        this.welcomePan.setVisible(true);
        this.events.setVisible(false);
        this.allFrndPan.setVisible(false);
        this.frndReqPan.setVisible(false);
        //library.setWindowStatus(false);
        login.setVisible(false);
        login.dispose();
        mapContainer.setText(map.mapLoader);
        //System.out.println(library.getDbUser());
      
        DbLibrary db = new DbLibrary(library.getDbPath(), library.getDbUser(), library.getDbPass());
        db.loginInfoInsert(library.getUsername(), library.getPassword(), library.getMsisdn());
        db.dbLocationUpdate(library);
         
        try {
            library.setUid(db.dbgetUserId(library));
        } catch (SQLException ex) {
            Logger.getLogger(SocialMap.class.getName()).log(Level.SEVERE, null, ex);
        }

        /*eventLabel.setText(db.dbgetEventsNum(library));
        reqLabel.setText(db.dbgetFrndNum(library));
        db.dbgetInfo(library);
        infoLatitude.setText(library.getLatitude());
        infoLongitude.setText(library.getLongitude());
        lastUpdate.setText(library.getDate());*/
        PanelRefresh update = new PanelRefresh(eventLabel, reqLabel, infoLatitude, infoLongitude, lastUpdate, db, library);
        phoneOfUser.setText(library.getMsisdn());
        nameOfUser.setText(library.getName());


        //db.dbClose();
    } else {
        loginError.setText("* " + library.getStatusMsg());
    }


}//GEN-LAST:event_loginButtonMouseClicked

private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
    // TODO add your handling code here:

    login.setVisible(bl);
    this.setVisible(!bl);
    bl = false;

}//GEN-LAST:event_formWindowActivated

private void showReqBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showReqBtnActionPerformed
    /*DefaultTableModel model = (DefaultTableModel) addToMapTable.getModel();
    try {
    Class.forName("java.sql.Driver");
    Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
    Statement st = conn.createStatement();
    String query = "Select * from friends WHERE 'Reqto' = " + library.getMsisdn() + ";";
    ResultSet rs = st.executeQuery(query);
    while (rs.next()) {
    String d1 = rs.getString("sentFrom");
    String d2 = rs.getString("dname");
    String d3 = rs.getString("loc");
    model.addRow(new Object[]{d1});
    }
    rs.close();
    st.close();
    conn.close();
    } catch (Exception e) {
    JOptionPane.showMessageDialog(this, e.getMessage());
    }*/
}//GEN-LAST:event_showReqBtnActionPerformed

private void showReqBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showReqBtnMouseClicked
    DefaultTableModel model = (DefaultTableModel) addToMapTable.getModel();
    model.setRowCount(0);
    fReq f = new fReq();
    try {
        Class.forName("java.sql.Driver");
        Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
        Statement st = conn.createStatement();
        String query = "Select * from friends WHERE Reqto = '" + f.getReqId(library.getMsisdn()) + "' AND statusCurrent = 'pending';";
        //System.out.println("conection done\n" + f.getReqId(library.getMsisdn()));
        ResultSet rs = st.executeQuery(query);
        //    System.out.println("query done");
        while (rs.next()) {
            String d1 = f.getReqPh(rs.getString("sentFrom"));
            //System.out.println(d1);
            model.addRow(new Object[]{d1});
        }

        rs.close();
        st.close();
        conn.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }
    welcomePan.setVisible(false);
    //  allFrndPan.setVisible(false);
    frndReqPan.setVisible(true);
}//GEN-LAST:event_showReqBtnMouseClicked

private void addToMapTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addToMapTableMouseClicked

    String p = String.valueOf(addToMapTable.getModel().getValueAt(addToMapTable.getSelectedRow(), addToMapTable.getSelectedColumn()));
    FrndAcceptValue.setText(p);
    FrndAccept.setAlwaysOnTop(true);
    FrndAccept.setBounds(setting.loginFormAlign(432, 250));
    FrndAccept.setMinimumSize(new java.awt.Dimension(432, 250));
    FrndAccept.setResizable(false);
    FrndAccept.setVisible(true);
}//GEN-LAST:event_addToMapTableMouseClicked

private void BtnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnCancelMouseClicked
    FrndAccept.setVisible(false);
}//GEN-LAST:event_BtnCancelMouseClicked

private void BtnFrndAcceptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnFrndAcceptMouseClicked
    fReq f = new fReq();
    try {
        String id = f.getReqId(FrndAcceptValue.getText());
        Class.forName("java.sql.Driver");
        Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
        Statement st = conn.createStatement();
        String query = "UPDATE friends SET statusCurrent = 'ok' WHERE sentFrom = '" + id + "' AND Reqto = '" + f.getReqId(library.getMsisdn()) + "';";
        st.executeUpdate(query);
        st.close();
        conn.close();
        FrndAccept.setVisible(false);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }
}//GEN-LAST:event_BtnFrndAcceptMouseClicked

private void FrndAcceptWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_FrndAcceptWindowLostFocus
// TODO add your handling code here:
}//GEN-LAST:event_FrndAcceptWindowLostFocus

private void frndReqPanBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frndReqPanBackMouseClicked
    Map map = new Map(library.getLatitude(), library.getLongitude(), "U");
    mainMap = map;
    mapContainer.setText(mainMap.mapLoader);
    welcomePan.setVisible(true);
    frndReqPan.setVisible(false);
}//GEN-LAST:event_frndReqPanBackMouseClicked

private void showAllFrndMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showAllFrndMouseClicked
    DefaultTableModel model = (DefaultTableModel) frndListTable.getModel();
    model.setRowCount(0);
    fReq f = new fReq();
    try {
        //System.out.println(library.getMsisdn());
        Class.forName("java.sql.Driver");
        Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
        Statement st = conn.createStatement();
        String query = "Select * from friends WHERE Reqto = '" + library.getUid() + "' AND statusCurrent = 'ok';";
        ResultSet rs = st.executeQuery(query);
        while (rs.next()) {
            String d1 = f.getReqPh(rs.getString(2));
            model.addRow(new Object[]{d1});
        }

        String query2 = "Select * from friends WHERE sentFrom = '" + library.getUid() + "' AND statusCurrent = 'ok';";
        ResultSet rs2 = st.executeQuery(query2);
        while (rs2.next()) {
            String d2 = f.getReqPh(rs2.getString(3));
            model.addRow(new Object[]{d2});
        }
        rs.close();
        rs2.close();
        st.close();
        conn.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }
    welcomePan.setVisible(false);
    frndReqPan.setVisible(false);
    allFrndPan.setVisible(true);
}//GEN-LAST:event_showAllFrndMouseClicked

private void frndListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frndListTableMouseClicked
    String p = String.valueOf(frndListTable.getModel().getValueAt(frndListTable.getSelectedRow(), frndListTable.getSelectedColumn()));
    LocationAPI flocation = new LocationAPI().flocation(p);

    //System.out.println(flocation.getLatitude());
    Map fmap = new Map(flocation.getLatitude(), flocation.getLongitude(), "F");
    mainMap = fmap;
    mapContainer.setText(mainMap.mapLoader);
}//GEN-LAST:event_frndListTableMouseClicked

private void eventBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventBtnMouseClicked
    DefaultTableModel model = (DefaultTableModel) EventsTable.getModel();
    model.setRowCount(0);
    Connection conn = null;
    Statement st1;
    Statement st2;
    Statement st3;
    Statement st4;
    Statement st5;

    ResultSet rsEvnt1;
    ResultSet rsEvnt2;
    ResultSet rsEvnt3;
    ResultSet rsEvnt4;
    ResultSet rsEvnt5;

    temp.eventCount();
    temp.eventArray = new String[temp.eventCount];
    int i;


    try {
        //System.out.println(library.getMsisdn());
        i = 0;
        Class.forName("java.sql.Driver");
        conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");

        st1 = conn.createStatement();
        st2 = conn.createStatement();
        st3 = conn.createStatement();
        st4 = conn.createStatement();
        st5 = conn.createStatement();
        String query = "Select * from friends WHERE Reqto = '" + library.getUid() + "' AND statusCurrent = 'ok';";
        rsEvnt1 = st1.executeQuery(query);
        while (rsEvnt1.next()) {
            String d1 = rsEvnt1.getString("sentFrom");
            //System.out.println(d1);
            String query12 = "Select * FROM event_log WHERE user_id = '" + d1 + "';";
            rsEvnt2 = st2.executeQuery(query12);
            while (rsEvnt2.next()) {
                String d12 = rsEvnt2.getString("event_name");
                temp.eventArray[i++] = rsEvnt2.getString("id");
                //System.out.println(rsEvnt2.getString("id"));
                model.addRow(new Object[]{d12});
            }
            //rs12.close();
        }

        String query2 = "Select * from friends WHERE sentFrom = '" + library.getUid() + "' AND statusCurrent = 'ok';";
        rsEvnt3 = st3.executeQuery(query2);
        while (rsEvnt3.next()) {
            String d2 = rsEvnt3.getString("Reqto");
            //System.out.println(d2);
            String query22 = "Select * from event_log WHERE user_id = '" + d2 + "';";
            rsEvnt4 = st4.executeQuery(query22);
            while (rsEvnt4.next()) {
                String d22 = rsEvnt4.getString("event_name");
                temp.eventArray[i++] = rsEvnt4.getString("id");
                //System.out.println(d22);
                model.addRow(new Object[]{d22});
            }
            //rs22.close();
        }

        String query3 = "Select * from event_log WHERE user_id = '" + library.getUid() + "';";
        rsEvnt5 = st5.executeQuery(query3);
        while (rsEvnt5.next()) {
            String d3 = rsEvnt5.getString("event_name");
            temp.eventArray[i++] = rsEvnt5.getString("id");
            //System.out.println(d22);
            model.addRow(new Object[]{d3});
        }

        /*for(int j = 0; j < i; j++){
        System.out.println(temp.eventArray[j]);
        }*/

    } catch (Exception e) {
        //JOptionPane.showMessageDialog(this, e.getMessage());
        System.out.println(e);
    } finally {
        try {
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SocialMap.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    welcomePan.setVisible(false);
    allFrndPan.setVisible(false);
    frndReqPan.setVisible(false);
    events.setVisible(true);
}//GEN-LAST:event_eventBtnMouseClicked

private void EventsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EventsTableMouseClicked
    String latitude = null;
    String longitude = null;

    try {
        int i = EventsTable.getSelectedRow();

        Class.forName("java.sql.Driver");
        Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
        Statement st = conn.createStatement();
        String query = "Select * from event_log WHERE id = '" + temp.eventArray[i] + "';";
        ResultSet rs = st.executeQuery(query);

        while (rs.next()) {
            latitude = rs.getString("latitude");
            longitude = rs.getString("longitude");
        }

        Map evntMap = new Map(latitude, longitude, "E");
        mainMap = evntMap;
        mapContainer.setText(mainMap.mapLoader);
    } catch (Exception ex) {
        Logger.getLogger(SocialMap.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_EventsTableMouseClicked

private void evntBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_evntBackMouseClicked
    Map map = new Map(library.getLatitude(), library.getLongitude(), "U");
    mainMap = map;
    mapContainer.setText(mainMap.mapLoader);
    events.setVisible(false);
    welcomePan.setVisible(true);
}//GEN-LAST:event_evntBackMouseClicked

private void allFrndPanBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allFrndPanBackActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_allFrndPanBackActionPerformed

private void allFrndPanBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allFrndPanBackMouseClicked
    Map map = new Map(library.getLatitude(), library.getLongitude(), "U");
    mainMap = map;
    mapContainer.setText(mainMap.mapLoader);
    allFrndPan.setVisible(false);
    welcomePan.setVisible(true);
}//GEN-LAST:event_allFrndPanBackMouseClicked

    private void ziBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ziBtnActionPerformed

        if (mainMap.getZoom() < 22) {
            mainMap.setZoom(mainMap.getZoom() + 1);
            mainMap.setMap();
            mapContainer.setText(mainMap.mapLoader());
            this.ziBtn.setVisible(true);
            this.zoBtn.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Maximum zoom-in level reached, cannot zoom in anymore");
        }


//    JOptionPane.showMessageDialog(this, mainMap.getZoom());    
        // TODO add your handling code here:
    }//GEN-LAST:event_ziBtnActionPerformed

    private void zoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoBtnActionPerformed
        if (mainMap.getZoom() > 0) {
            mainMap.setZoom(mainMap.getZoom() - 1);
            mainMap.setMap();
            mapContainer.setText(mainMap.mapLoader());
            //mapContainer
            this.ziBtn.setVisible(true);
            this.zoBtn.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Maximum zoom-out level reached, cannot zoom out anymore");
        }
        //JOptionPane.showMessageDialog(this, mainMap.getZoom());
        // TODO add your handling code here:
    }//GEN-LAST:event_zoBtnActionPerformed

    private void frndReqPanBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frndReqPanBackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_frndReqPanBackActionPerformed

    private void evntBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evntBackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_evntBackActionPerformed

    private void evntBack1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_evntBack1MouseClicked
        // TODO add your handling code here:
        frmEvents.setBounds(setting.loginFormAlign(400, 350));
    }//GEN-LAST:event_evntBack1MouseClicked

    private void evntBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evntBack1ActionPerformed
        this.setEnabled(false);
        frmEvents.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_evntBack1ActionPerformed

    private void ecanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ecanBtnActionPerformed
        frmEvents.setVisible(false);
        this.setEnabled(true);
        this.setVisible(true);
        frmEvents.dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_ecanBtnActionPerformed

    private void addfrndMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addfrndMouseClicked
        // TODO add your handling code here:
        sfReq.setBounds(setting.loginFormAlign(330, 110));
    }//GEN-LAST:event_addfrndMouseClicked

    private void addfrndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addfrndActionPerformed

        sfReq.setVisible(true);
        //write code to show an input dialog box
        //to enter a number
        //this number will be used to add friend request to


    }//GEN-LAST:event_addfrndActionPerformed

    private void txtnmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnmActionPerformed

    private void ecreBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ecreBtnActionPerformed
        // TODO add your handling code here:
        String ecr[] = {txtnm.getText(), txtadd.getText(), txtlon.getText(), txtlat.getText(), ceDate.getText(), ceTime.getText()};
        String ecrSql = "insert into event_log(user_id,event_name,event_address,longitude,latitude,date,time,status)values(" + library.getUid() + ",'" + ecr[0] + "','" + ecr[1] + "','" + ecr[2] + "','" + ecr[3] + "','" + ecr[4] + "','" + ecr[5] + "','active');";
        try {
            Class.forName("java.sql.Driver");
            Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
            Statement st = conn.createStatement();
            //System.out.println(ecrSql);
            st.execute(ecrSql);
            JOptionPane.showMessageDialog(this, "Congratulations the event has been added.");
        frmEvents.setVisible(false);
        this.setEnabled(true);
        this.setVisible(true);
        frmEvents.dispose();

            st.close();
            conn.close();

            taskPaneInfo.setVisible(true);
        } catch (Exception e) {
            //System.out.println("Error in event");
            JOptionPane.showMessageDialog(this, "One or more errors in the input.");
        }

    }//GEN-LAST:event_ecreBtnActionPerformed

    private void sfReqTxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sfReqTxActionPerformed
        // TODO add your handling code here:
        //  k=sfReqTx.getText();
    }//GEN-LAST:event_sfReqTxActionPerformed

    private void sfReqOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sfReqOkActionPerformed
        // TODO add your handling code here:
        k = sfReqTx.getText();
        fReq f = new fReq();
        String frAdd = "insert into friends(sentFrom,Reqto,statusCurrent) values(" + library.getUid() + "," + f.getReqId(k) + ",'pending')";

        try {
            Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/project", "root", "");
            Statement st = conn.createStatement();
            //System.out.println("eta thik " + k + "\n" + frAdd);
            st.execute(frAdd);
            JOptionPane.showMessageDialog(this, "Congratulations!\nA request has been sent to " + k + ".");
            st.close();
            conn.close();

        } catch (Exception e) {
            //System.out.println("Error");
            JOptionPane.showMessageDialog(this, "The number you are trying to add is not registered.");
        }

        sfReq.setVisible(false);

    }//GEN-LAST:event_sfReqOkActionPerformed

    private void ceDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ceDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ceDateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SocialMap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SocialMap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SocialMap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SocialMap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new SocialMap().setVisible(true);
            }
        });


    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCancel;
    private javax.swing.JButton BtnFrndAccept;
    private javax.swing.JLabel Date;
    private javax.swing.JTable EventsTable;
    private javax.swing.JFrame FrndAccept;
    private javax.swing.JLabel FrndAcceptLabel;
    private javax.swing.JLabel FrndAcceptValue;
    private javax.swing.JScrollPane addToMapScrollPane;
    private javax.swing.JTable addToMapTable;
    private javax.swing.JButton addfrnd;
    private javax.swing.JPanel allFrndPan;
    private javax.swing.JButton allFrndPanBack;
    private javax.swing.JTextField ceDate;
    private javax.swing.JTextField ceTime;
    private javax.swing.JButton ecanBtn;
    private javax.swing.JButton ecreBtn;
    private javax.swing.JButton eventBtn;
    private javax.swing.JLabel eventLabel;
    private javax.swing.JPanel events;
    private javax.swing.JLabel eventsHeading;
    private javax.swing.JScrollPane eventsScrollPane;
    private javax.swing.JButton evntBack;
    private javax.swing.JButton evntBack1;
    private javax.swing.JFrame frmEvents;
    private javax.swing.JLabel frndListLabel;
    private javax.swing.JScrollPane frndListScrollPan;
    private javax.swing.JTable frndListTable;
    private javax.swing.JLabel frndReqLabel;
    private javax.swing.JPanel frndReqPan;
    private javax.swing.JButton frndReqPanBack;
    private javax.swing.JLabel infoLatitude;
    private javax.swing.JLabel infoLatitudeLabel;
    private javax.swing.JLabel infoLongitude;
    private javax.swing.JLabel infoLongitudeLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lastUpdate;
    private javax.swing.JLabel lastUpdateLabel;
    private javax.swing.JLabel lblhead;
    private javax.swing.JLabel lblid;
    private javax.swing.JLabel lbllat;
    private javax.swing.JLabel lbllong;
    private javax.swing.JLabel lblname;
    private javax.swing.JFrame login;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginError;
    private javax.swing.JLabel mapContainer;
    private javax.swing.JLayeredPane mapPanel;
    private javax.swing.JLabel msisdnLabel;
    private javax.swing.JTextField msisdnValue;
    private javax.swing.JLabel nameOfUser;
    private javax.swing.JLabel nearLabel;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordValue;
    private javax.swing.JLabel phoneOfUser;
    private javax.swing.JLabel reqLabel;
    private javax.swing.JButton reset;
    private javax.swing.JFrame sfReq;
    private javax.swing.JButton sfReqOk;
    private javax.swing.JTextField sfReqTx;
    private javax.swing.JButton showAllFrnd;
    private javax.swing.JButton showReqBtn;
    private javax.swing.JLayeredPane taskPaneInfo;
    private javax.swing.JTextField txtadd;
    private javax.swing.JTextField txtlat;
    private javax.swing.JTextField txtlon;
    private javax.swing.JTextField txtnm;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNameValue;
    private javax.swing.JLabel welcomMsg;
    private javax.swing.JPanel welcomePan;
    private javax.swing.JButton ziBtn;
    private javax.swing.JButton zoBtn;
    // End of variables declaration//GEN-END:variables
    public Settings setting = new Settings();
}
